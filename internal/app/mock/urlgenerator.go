// Code generated by MockGen. DO NOT EDIT.
// Source: C:\Users\dasa1020\go\go-musthave-shortener-tpl\internal\app\urlgenerate\urlgenerator.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockURLGenerator is a mock of URLGenerator interface.
type MockURLGenerator struct {
	ctrl     *gomock.Controller
	recorder *MockURLGeneratorMockRecorder
}

// MockURLGeneratorMockRecorder is the mock recorder for MockURLGenerator.
type MockURLGeneratorMockRecorder struct {
	mock *MockURLGenerator
}

// NewMockURLGenerator creates a new mock instance.
func NewMockURLGenerator(ctrl *gomock.Controller) *MockURLGenerator {
	mock := &MockURLGenerator{ctrl: ctrl}
	mock.recorder = &MockURLGeneratorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockURLGenerator) EXPECT() *MockURLGeneratorMockRecorder {
	return m.recorder
}

// GenerateURL mocks base method.
func (m *MockURLGenerator) GenerateURL(originalURL string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateURL", originalURL)
	ret0, _ := ret[0].(string)
	return ret0
}

// GenerateURL indicates an expected call of GenerateURL.
func (mr *MockURLGeneratorMockRecorder) GenerateURL(originalURL interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateURL", reflect.TypeOf((*MockURLGenerator)(nil).GenerateURL), originalURL)
}
